//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("strefakibicaModel", "FK_Events_Disciplines", "Disciplines", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataBase.Disciplines), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataBase.Events))]
[assembly: EdmRelationshipAttribute("strefakibicaModel", "FK_Event_TeamPlayers_Events", "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataBase.Events), "Event_TeamPlayers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataBase.Event_TeamPlayers))]
[assembly: EdmRelationshipAttribute("strefakibicaModel", "FK_Event_TeamPlayers_Team_Players", "Team_Players", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataBase.Team_Players), "Event_TeamPlayers", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataBase.Event_TeamPlayers))]
[assembly: EdmRelationshipAttribute("strefakibicaModel", "FK_Events_EventTypes", "EventTypes", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataBase.EventTypes), "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataBase.Events))]
[assembly: EdmRelationshipAttribute("strefakibicaModel", "FK_Invitations_Events", "Events", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataBase.Events), "Invitations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataBase.Invitations))]
[assembly: EdmRelationshipAttribute("strefakibicaModel", "FK_Invitations_Places", "Places", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataBase.Places), "Invitations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataBase.Invitations))]
[assembly: EdmRelationshipAttribute("strefakibicaModel", "FK_Invitations_Users", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataBase.Users), "Invitations", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataBase.Invitations))]
[assembly: EdmRelationshipAttribute("strefakibicaModel", "FK_Team_Players_Players", "Players", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataBase.Players), "Team_Players", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataBase.Team_Players))]
[assembly: EdmRelationshipAttribute("strefakibicaModel", "FK_Team_Players_Teams", "Teams", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DataBase.Teams), "Team_Players", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DataBase.Team_Players))]

#endregion

namespace DataBase
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class strefakibicaEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new strefakibicaEntities object using the connection string found in the 'strefakibicaEntities' section of the application configuration file.
        /// </summary>
        public strefakibicaEntities() : base("name=strefakibicaEntities", "strefakibicaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new strefakibicaEntities object.
        /// </summary>
        public strefakibicaEntities(string connectionString) : base(connectionString, "strefakibicaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new strefakibicaEntities object.
        /// </summary>
        public strefakibicaEntities(EntityConnection connection) : base(connection, "strefakibicaEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Disciplines> Disciplines
        {
            get
            {
                if ((_Disciplines == null))
                {
                    _Disciplines = base.CreateObjectSet<Disciplines>("Disciplines");
                }
                return _Disciplines;
            }
        }
        private ObjectSet<Disciplines> _Disciplines;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Event_TeamPlayers> Event_TeamPlayers
        {
            get
            {
                if ((_Event_TeamPlayers == null))
                {
                    _Event_TeamPlayers = base.CreateObjectSet<Event_TeamPlayers>("Event_TeamPlayers");
                }
                return _Event_TeamPlayers;
            }
        }
        private ObjectSet<Event_TeamPlayers> _Event_TeamPlayers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Events> Events
        {
            get
            {
                if ((_Events == null))
                {
                    _Events = base.CreateObjectSet<Events>("Events");
                }
                return _Events;
            }
        }
        private ObjectSet<Events> _Events;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EventTypes> EventTypes
        {
            get
            {
                if ((_EventTypes == null))
                {
                    _EventTypes = base.CreateObjectSet<EventTypes>("EventTypes");
                }
                return _EventTypes;
            }
        }
        private ObjectSet<EventTypes> _EventTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invitation_Users> Invitation_Users
        {
            get
            {
                if ((_Invitation_Users == null))
                {
                    _Invitation_Users = base.CreateObjectSet<Invitation_Users>("Invitation_Users");
                }
                return _Invitation_Users;
            }
        }
        private ObjectSet<Invitation_Users> _Invitation_Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Invitations> Invitations
        {
            get
            {
                if ((_Invitations == null))
                {
                    _Invitations = base.CreateObjectSet<Invitations>("Invitations");
                }
                return _Invitations;
            }
        }
        private ObjectSet<Invitations> _Invitations;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Places> Places
        {
            get
            {
                if ((_Places == null))
                {
                    _Places = base.CreateObjectSet<Places>("Places");
                }
                return _Places;
            }
        }
        private ObjectSet<Places> _Places;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Players> Players
        {
            get
            {
                if ((_Players == null))
                {
                    _Players = base.CreateObjectSet<Players>("Players");
                }
                return _Players;
            }
        }
        private ObjectSet<Players> _Players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Team_Players> Team_Players
        {
            get
            {
                if ((_Team_Players == null))
                {
                    _Team_Players = base.CreateObjectSet<Team_Players>("Team_Players");
                }
                return _Team_Players;
            }
        }
        private ObjectSet<Team_Players> _Team_Players;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Teams> Teams
        {
            get
            {
                if ((_Teams == null))
                {
                    _Teams = base.CreateObjectSet<Teams>("Teams");
                }
                return _Teams;
            }
        }
        private ObjectSet<Teams> _Teams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Disciplines EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDisciplines(Disciplines disciplines)
        {
            base.AddObject("Disciplines", disciplines);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Event_TeamPlayers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvent_TeamPlayers(Event_TeamPlayers event_TeamPlayers)
        {
            base.AddObject("Event_TeamPlayers", event_TeamPlayers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Events EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEvents(Events events)
        {
            base.AddObject("Events", events);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EventTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEventTypes(EventTypes eventTypes)
        {
            base.AddObject("EventTypes", eventTypes);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invitation_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvitation_Users(Invitation_Users invitation_Users)
        {
            base.AddObject("Invitation_Users", invitation_Users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Invitations EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInvitations(Invitations invitations)
        {
            base.AddObject("Invitations", invitations);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Places EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlaces(Places places)
        {
            base.AddObject("Places", places);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayers(Players players)
        {
            base.AddObject("Players", players);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Team_Players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeam_Players(Team_Players team_Players)
        {
            base.AddObject("Team_Players", team_Players);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Teams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTeams(Teams teams)
        {
            base.AddObject("Teams", teams);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }

        #endregion
        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> AddDisciplines(global::System.String name)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("AddDisciplines", nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="fullName">No Metadata Documentation available.</param>
        /// <param name="startDate">No Metadata Documentation available.</param>
        /// <param name="endDate">No Metadata Documentation available.</param>
        /// <param name="disciplinesId">No Metadata Documentation available.</param>
        public int AddEvent(global::System.String fullName, Nullable<global::System.DateTime> startDate, Nullable<global::System.DateTime> endDate, Nullable<global::System.Int32> disciplinesId)
        {
            ObjectParameter fullNameParameter;
            if (fullName != null)
            {
                fullNameParameter = new ObjectParameter("FullName", fullName);
            }
            else
            {
                fullNameParameter = new ObjectParameter("FullName", typeof(global::System.String));
            }
    
            ObjectParameter startDateParameter;
            if (startDate.HasValue)
            {
                startDateParameter = new ObjectParameter("StartDate", startDate);
            }
            else
            {
                startDateParameter = new ObjectParameter("StartDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter endDateParameter;
            if (endDate.HasValue)
            {
                endDateParameter = new ObjectParameter("EndDate", endDate);
            }
            else
            {
                endDateParameter = new ObjectParameter("EndDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter disciplinesIdParameter;
            if (disciplinesId.HasValue)
            {
                disciplinesIdParameter = new ObjectParameter("disciplinesId", disciplinesId);
            }
            else
            {
                disciplinesIdParameter = new ObjectParameter("disciplinesId", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("AddEvent", fullNameParameter, startDateParameter, endDateParameter, disciplinesIdParameter);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="strefakibicaModel", Name="Disciplines")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Disciplines : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Disciplines object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Disciplines CreateDisciplines(global::System.Int32 id, global::System.String name)
        {
            Disciplines disciplines = new Disciplines();
            disciplines.ID = id;
            disciplines.Name = name;
            return disciplines;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Events_Disciplines", "Events")]
        public EntityCollection<Events> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Events>("strefakibicaModel.FK_Events_Disciplines", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Events>("strefakibicaModel.FK_Events_Disciplines", "Events", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="strefakibicaModel", Name="Event_TeamPlayers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Event_TeamPlayers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Event_TeamPlayers object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Event_TeamPlayers CreateEvent_TeamPlayers(global::System.Int32 id)
        {
            Event_TeamPlayers event_TeamPlayers = new Event_TeamPlayers();
            event_TeamPlayers.ID = id;
            return event_TeamPlayers;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Event_TeamPlayers_Events", "Events")]
        public Events Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Events>("strefakibicaModel.FK_Event_TeamPlayers_Events", "Events").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Events>("strefakibicaModel.FK_Event_TeamPlayers_Events", "Events").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Events> EventsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Events>("strefakibicaModel.FK_Event_TeamPlayers_Events", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Events>("strefakibicaModel.FK_Event_TeamPlayers_Events", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Event_TeamPlayers_Team_Players", "Team_Players")]
        public Team_Players Team_Players
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team_Players>("strefakibicaModel.FK_Event_TeamPlayers_Team_Players", "Team_Players").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team_Players>("strefakibicaModel.FK_Event_TeamPlayers_Team_Players", "Team_Players").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Team_Players> Team_PlayersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Team_Players>("strefakibicaModel.FK_Event_TeamPlayers_Team_Players", "Team_Players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Team_Players>("strefakibicaModel.FK_Event_TeamPlayers_Team_Players", "Team_Players", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="strefakibicaModel", Name="Events")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Events : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Events object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="dateStart">Initial value of the DateStart property.</param>
        /// <param name="dateEnd">Initial value of the DateEnd property.</param>
        /// <param name="fullName">Initial value of the FullName property.</param>
        public static Events CreateEvents(global::System.Int32 id, global::System.DateTime dateStart, global::System.DateTime dateEnd, global::System.String fullName)
        {
            Events events = new Events();
            events.ID = id;
            events.DateStart = dateStart;
            events.DateEnd = dateEnd;
            events.FullName = fullName;
            return events;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateStart
        {
            get
            {
                return _DateStart;
            }
            set
            {
                OnDateStartChanging(value);
                ReportPropertyChanging("DateStart");
                _DateStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateStart");
                OnDateStartChanged();
            }
        }
        private global::System.DateTime _DateStart;
        partial void OnDateStartChanging(global::System.DateTime value);
        partial void OnDateStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private global::System.DateTime _DateEnd;
        partial void OnDateEndChanging(global::System.DateTime value);
        partial void OnDateEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Events_Disciplines", "Disciplines")]
        public Disciplines Disciplines
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disciplines>("strefakibicaModel.FK_Events_Disciplines", "Disciplines").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disciplines>("strefakibicaModel.FK_Events_Disciplines", "Disciplines").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Disciplines> DisciplinesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Disciplines>("strefakibicaModel.FK_Events_Disciplines", "Disciplines");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Disciplines>("strefakibicaModel.FK_Events_Disciplines", "Disciplines", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Event_TeamPlayers_Events", "Event_TeamPlayers")]
        public EntityCollection<Event_TeamPlayers> Event_TeamPlayers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event_TeamPlayers>("strefakibicaModel.FK_Event_TeamPlayers_Events", "Event_TeamPlayers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event_TeamPlayers>("strefakibicaModel.FK_Event_TeamPlayers_Events", "Event_TeamPlayers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Events_EventTypes", "EventTypes")]
        public EventTypes EventTypes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTypes>("strefakibicaModel.FK_Events_EventTypes", "EventTypes").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTypes>("strefakibicaModel.FK_Events_EventTypes", "EventTypes").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EventTypes> EventTypesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EventTypes>("strefakibicaModel.FK_Events_EventTypes", "EventTypes");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EventTypes>("strefakibicaModel.FK_Events_EventTypes", "EventTypes", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Invitations_Events", "Invitations")]
        public EntityCollection<Invitations> Invitations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invitations>("strefakibicaModel.FK_Invitations_Events", "Invitations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invitations>("strefakibicaModel.FK_Invitations_Events", "Invitations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="strefakibicaModel", Name="EventTypes")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EventTypes : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EventTypes object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="dateStart">Initial value of the DateStart property.</param>
        /// <param name="dateEnd">Initial value of the DateEnd property.</param>
        /// <param name="rss">Initial value of the Rss property.</param>
        /// <param name="parserType">Initial value of the ParserType property.</param>
        public static EventTypes CreateEventTypes(global::System.Int32 id, global::System.String name, global::System.DateTime dateStart, global::System.DateTime dateEnd, global::System.String rss, global::System.String parserType)
        {
            EventTypes eventTypes = new EventTypes();
            eventTypes.ID = id;
            eventTypes.Name = name;
            eventTypes.DateStart = dateStart;
            eventTypes.DateEnd = dateEnd;
            eventTypes.Rss = rss;
            eventTypes.ParserType = parserType;
            return eventTypes;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateStart
        {
            get
            {
                return _DateStart;
            }
            set
            {
                OnDateStartChanging(value);
                ReportPropertyChanging("DateStart");
                _DateStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateStart");
                OnDateStartChanged();
            }
        }
        private global::System.DateTime _DateStart;
        partial void OnDateStartChanging(global::System.DateTime value);
        partial void OnDateStartChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private global::System.DateTime _DateEnd;
        partial void OnDateEndChanging(global::System.DateTime value);
        partial void OnDateEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Rss
        {
            get
            {
                return _Rss;
            }
            set
            {
                OnRssChanging(value);
                ReportPropertyChanging("Rss");
                _Rss = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Rss");
                OnRssChanged();
            }
        }
        private global::System.String _Rss;
        partial void OnRssChanging(global::System.String value);
        partial void OnRssChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Logo
        {
            get
            {
                return _Logo;
            }
            set
            {
                OnLogoChanging(value);
                ReportPropertyChanging("Logo");
                _Logo = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Logo");
                OnLogoChanged();
            }
        }
        private global::System.String _Logo;
        partial void OnLogoChanging(global::System.String value);
        partial void OnLogoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ParserType
        {
            get
            {
                return _ParserType;
            }
            set
            {
                OnParserTypeChanging(value);
                ReportPropertyChanging("ParserType");
                _ParserType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ParserType");
                OnParserTypeChanged();
            }
        }
        private global::System.String _ParserType;
        partial void OnParserTypeChanging(global::System.String value);
        partial void OnParserTypeChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Events_EventTypes", "Events")]
        public EntityCollection<Events> Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Events>("strefakibicaModel.FK_Events_EventTypes", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Events>("strefakibicaModel.FK_Events_EventTypes", "Events", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="strefakibicaModel", Name="Invitation_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invitation_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invitation_Users object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="invitationId">Initial value of the InvitationId property.</param>
        public static Invitation_Users CreateInvitation_Users(global::System.Int32 id, global::System.Int32 userId, global::System.Int32 invitationId)
        {
            Invitation_Users invitation_Users = new Invitation_Users();
            invitation_Users.ID = id;
            invitation_Users.UserId = userId;
            invitation_Users.InvitationId = invitationId;
            return invitation_Users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Int32 _UserId;
        partial void OnUserIdChanging(global::System.Int32 value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 InvitationId
        {
            get
            {
                return _InvitationId;
            }
            set
            {
                OnInvitationIdChanging(value);
                ReportPropertyChanging("InvitationId");
                _InvitationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvitationId");
                OnInvitationIdChanged();
            }
        }
        private global::System.Int32 _InvitationId;
        partial void OnInvitationIdChanging(global::System.Int32 value);
        partial void OnInvitationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="strefakibicaModel", Name="Invitations")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Invitations : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Invitations object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="privacy">Initial value of the Privacy property.</param>
        public static Invitations CreateInvitations(global::System.Int32 id, global::System.Boolean privacy)
        {
            Invitations invitations = new Invitations();
            invitations.Id = id;
            invitations.Privacy = privacy;
            return invitations;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Privacy
        {
            get
            {
                return _Privacy;
            }
            set
            {
                OnPrivacyChanging(value);
                ReportPropertyChanging("Privacy");
                _Privacy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Privacy");
                OnPrivacyChanged();
            }
        }
        private global::System.Boolean _Privacy;
        partial void OnPrivacyChanging(global::System.Boolean value);
        partial void OnPrivacyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Invitations_Events", "Events")]
        public Events Events
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Events>("strefakibicaModel.FK_Invitations_Events", "Events").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Events>("strefakibicaModel.FK_Invitations_Events", "Events").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Events> EventsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Events>("strefakibicaModel.FK_Invitations_Events", "Events");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Events>("strefakibicaModel.FK_Invitations_Events", "Events", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Invitations_Places", "Places")]
        public Places Places
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Places>("strefakibicaModel.FK_Invitations_Places", "Places").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Places>("strefakibicaModel.FK_Invitations_Places", "Places").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Places> PlacesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Places>("strefakibicaModel.FK_Invitations_Places", "Places");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Places>("strefakibicaModel.FK_Invitations_Places", "Places", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Invitations_Users", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("strefakibicaModel.FK_Invitations_Users", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("strefakibicaModel.FK_Invitations_Users", "Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("strefakibicaModel.FK_Invitations_Users", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("strefakibicaModel.FK_Invitations_Users", "Users", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="strefakibicaModel", Name="Places")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Places : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Places object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="x">Initial value of the X property.</param>
        /// <param name="y">Initial value of the Y property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="address">Initial value of the Address property.</param>
        public static Places CreatePlaces(global::System.Int32 id, global::System.String name, global::System.String description, global::System.Double x, global::System.Double y, global::System.String city, global::System.String address)
        {
            Places places = new Places();
            places.ID = id;
            places.Name = name;
            places.Description = description;
            places.X = x;
            places.Y = y;
            places.City = city;
            places.Address = address;
            return places;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double X
        {
            get
            {
                return _X;
            }
            set
            {
                OnXChanging(value);
                ReportPropertyChanging("X");
                _X = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("X");
                OnXChanged();
            }
        }
        private global::System.Double _X;
        partial void OnXChanging(global::System.Double value);
        partial void OnXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Y
        {
            get
            {
                return _Y;
            }
            set
            {
                OnYChanging(value);
                ReportPropertyChanging("Y");
                _Y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Y");
                OnYChanged();
            }
        }
        private global::System.Double _Y;
        partial void OnYChanging(global::System.Double value);
        partial void OnYChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Invitations_Places", "Invitations")]
        public EntityCollection<Invitations> Invitations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invitations>("strefakibicaModel.FK_Invitations_Places", "Invitations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invitations>("strefakibicaModel.FK_Invitations_Places", "Invitations", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="strefakibicaModel", Name="Players")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Players : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Players object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Players CreatePlayers(global::System.Int32 id, global::System.String name)
        {
            Players players = new Players();
            players.ID = id;
            players.Name = name;
            return players;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Team_Players_Players", "Team_Players")]
        public EntityCollection<Team_Players> Team_Players
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team_Players>("strefakibicaModel.FK_Team_Players_Players", "Team_Players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team_Players>("strefakibicaModel.FK_Team_Players_Players", "Team_Players", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="strefakibicaModel", Name="Team_Players")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Team_Players : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Team_Players object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Team_Players CreateTeam_Players(global::System.Int32 id)
        {
            Team_Players team_Players = new Team_Players();
            team_Players.ID = id;
            return team_Players;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Event_TeamPlayers_Team_Players", "Event_TeamPlayers")]
        public EntityCollection<Event_TeamPlayers> Event_TeamPlayers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Event_TeamPlayers>("strefakibicaModel.FK_Event_TeamPlayers_Team_Players", "Event_TeamPlayers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Event_TeamPlayers>("strefakibicaModel.FK_Event_TeamPlayers_Team_Players", "Event_TeamPlayers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Team_Players_Players", "Players")]
        public Players Players
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Players>("strefakibicaModel.FK_Team_Players_Players", "Players").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Players>("strefakibicaModel.FK_Team_Players_Players", "Players").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Players> PlayersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Players>("strefakibicaModel.FK_Team_Players_Players", "Players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Players>("strefakibicaModel.FK_Team_Players_Players", "Players", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Team_Players_Teams", "Teams")]
        public Teams Teams
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("strefakibicaModel.FK_Team_Players_Teams", "Teams").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("strefakibicaModel.FK_Team_Players_Teams", "Teams").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Teams> TeamsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Teams>("strefakibicaModel.FK_Team_Players_Teams", "Teams");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Teams>("strefakibicaModel.FK_Team_Players_Teams", "Teams", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="strefakibicaModel", Name="Teams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Teams : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Teams object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="country">Initial value of the Country property.</param>
        public static Teams CreateTeams(global::System.Int32 id, global::System.String name, global::System.String country)
        {
            Teams teams = new Teams();
            teams.Id = id;
            teams.Name = name;
            teams.Country = country;
            return teams;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Country
        {
            get
            {
                return _Country;
            }
            set
            {
                OnCountryChanging(value);
                ReportPropertyChanging("Country");
                _Country = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Country");
                OnCountryChanged();
            }
        }
        private global::System.String _Country;
        partial void OnCountryChanging(global::System.String value);
        partial void OnCountryChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Team_Players_Teams", "Team_Players")]
        public EntityCollection<Team_Players> Team_Players
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Team_Players>("strefakibicaModel.FK_Team_Players_Teams", "Team_Players");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Team_Players>("strefakibicaModel.FK_Team_Players_Teams", "Team_Players", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="strefakibicaModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Users object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="login">Initial value of the Login property.</param>
        /// <param name="password">Initial value of the Password property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Users CreateUsers(global::System.Int32 id, global::System.String login, global::System.String password, global::System.String name)
        {
            Users users = new Users();
            users.ID = id;
            users.Login = login;
            users.Password = password;
            users.Name = name;
            return users;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("strefakibicaModel", "FK_Invitations_Users", "Invitations")]
        public EntityCollection<Invitations> Invitations
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Invitations>("strefakibicaModel.FK_Invitations_Users", "Invitations");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Invitations>("strefakibicaModel.FK_Invitations_Users", "Invitations", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
